buildscript {
    repositories {
        mavenLocal()
        jcenter()
        google()
        maven {
          url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath ('com.uber:okbuck:0.37.2') {
          exclude module: 'gradle'
        }
        classpath 'com.android.tools.build:gradle:3.1.1'
        classpath "com.gradle:build-scan-plugin:1.12.1"
    }
}

allprojects {

    def buildConfig = [
            compileSdkVersion: 25,
            minSdkVersion    : 21,
            targetSdkVersion : 25,
            buildToolsVersion: '27.0.3',
    ]

    ext.config = [
        "build": buildConfig
    ]

    repositories {
        jcenter()
        google()

    }
    buildDir = "gradle_build"

    def androidHome = System.getenv("ANDROID_HOME")
    if (!androidHome) {
        throw new IllegalArgumentException("ANDROID_HOME environment variable is not set.")
    }
    repositories {
        maven {
            url "$androidHome/extras/android/m2repository/"
        }
        maven {
            url "$androidHome/extras/google/m2repository/"
        }
    }
}

subprojects { project ->
    group = "com.studio"

    afterEvaluate {
        if (project.plugins.hasPlugin('java')) {
            addCommonConfigurationForJavaModules(project)
        } else if (project.plugins.hasPlugin('com.android.application')
            || project.plugins.hasPlugin('com.android.library')) {
            addCommonConfigurationForAndroidModules(project)
        }

        if (project.plugins.hasPlugin('com.android.application')) {
            project.android{
                defaultConfig {
                    multiDexEnabled true
                    versionCode 1
                    versionName "1.0.0"
                }
                signingConfigs {
                    debug {
                        storeFile file('config/signing/debug.keystore')
                    }
                }
                buildTypes {
                    release {
                        signingConfig signingConfigs.debug
                    }
                }
                packagingOptions {
                    exclude 'META-INF/LICENSE'
                }
                dexOptions {
                    javaMaxHeapSize "2g"
                }
            }
        }
    }
}

def addCommonConfigurationForJavaModules(Project project) {
    project.sourceCompatibility = JavaVersion.VERSION_1_7
    project.targetCompatibility = JavaVersion.VERSION_1_7
}

def addCommonConfigurationForAndroidModules(Project project) {

    project.android {
        compileSdkVersion config.build.compileSdkVersion
        buildToolsVersion config.build.buildToolsVersion

        defaultConfig {
            minSdkVersion config.build.minSdkVersion
            targetSdkVersion config.build.targetSdkVersion
            vectorDrawables.useSupportLibrary = true
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_7
            targetCompatibility JavaVersion.VERSION_1_7
        }

        lintOptions {
            abortOnError false
        }
    }

}

